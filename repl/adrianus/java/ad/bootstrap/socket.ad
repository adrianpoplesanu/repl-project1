class Socket {
    socket = null

    def constructor(p_name, p_host, p_port, p_is_active, p_is_forever, p_is_client, p_is_server) {
        socket = __iosocket(p_name, p_host, p_port, p_is_active, p_is_forever, p_is_client, p_is_server)
    }

    def create_server() {
        socket.create_server()
    }

    def create_client() {
        socket.create_client()
    }

    def listen(callback) {
        /* when a connection is established run callback() */
        /* server listens */
        client = socket.accept()
        if (client != null) {
            print(client)
        }

        if (callback != null) {
            callback(client)
        }
    }

    def send(message, callback) {
        /* use this to send a message on the opened connection */
    }

    def read(callback) {
       /* use this to read messages from an opened connection */
    }

    def close() {
        /* close the connection */
    }

    def is_client() {

    }

    def is_server() {

    }

    def is_active() {

    }

    def get_port() {

    }

    def get_name() {

    }
}